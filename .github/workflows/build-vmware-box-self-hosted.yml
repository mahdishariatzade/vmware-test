name: Build VMware Vagrant Box (Self-Hosted)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      box_name:
        description: 'Name for the Vagrant box'
        required: true
        default: 'arvan-practices-vmware'
      box_version:
        description: 'Version for the Vagrant box'
        required: true
        default: '1.0.0'

jobs:
  build-vmware-box:
    runs-on: self-hosted  # Requires a self-hosted runner with VMware installed
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Verify VMware Installation
      run: |
        # Check if VMware is installed
        if command -v vmware &> /dev/null; then
          echo "VMware is installed"
          vmware --version
        else
          echo "VMware is not installed or not in PATH"
          exit 1
        fi
        
    - name: Verify Vagrant Installation
      run: |
        # Check if Vagrant is installed
        if command -v vagrant &> /dev/null; then
          echo "Vagrant is installed"
          vagrant --version
        else
          echo "Vagrant is not installed"
          exit 1
        fi
        
    - name: Install VMware Vagrant Plugin
      run: |
        # Install VMware plugin if not already installed
        if ! vagrant plugin list | grep -q "vagrant-vmware-desktop"; then
          vagrant plugin install vagrant-vmware-desktop
        else
          echo "VMware plugin already installed"
        fi
        
    - name: Create Box Directory
      run: |
        mkdir -p output
        
    - name: Build Vagrant Box
      run: |
        # Set box name and version from inputs or use defaults
        BOX_NAME="${GITHUB_EVENT_NAME == 'workflow_dispatch' && github.event.inputs.box_name || 'arvan-practices-vmware'}"
        BOX_VERSION="${GITHUB_EVENT_NAME == 'workflow_dispatch' && github.event.inputs.box_version || '1.0.0'}"
        
        echo "Building box: $BOX_NAME version $BOX_VERSION"
        
        # Start the VM and package it
        vagrant up --provider=vmware_desktop
        vagrant package --output "output/${BOX_NAME}-${BOX_VERSION}.box"
        vagrant destroy -f
        
    - name: Create Box Metadata
      run: |
        BOX_NAME="${GITHUB_EVENT_NAME == 'workflow_dispatch' && github.event.inputs.box_name || 'arvan-practices-vmware'}"
        BOX_VERSION="${GITHUB_EVENT_NAME == 'workflow_dispatch' && github.event.inputs.box_version || '1.0.0'}"
        
        # Determine checksum command based on OS
        if command -v sha256sum &> /dev/null; then
          CHECKSUM=$(sha256sum output/${BOX_NAME}-${BOX_VERSION}.box | cut -d' ' -f1)
        elif command -v shasum &> /dev/null; then
          CHECKSUM=$(shasum -a 256 output/${BOX_NAME}-${BOX_VERSION}.box | cut -d' ' -f1)
        else
          echo "No checksum tool found"
          exit 1
        fi
        
        cat > "output/${BOX_NAME}-metadata.json" << EOF
        {
          "name": "${BOX_NAME}",
          "description": "Arvan Practices VMware Vagrant Box",
          "versions": [
            {
              "version": "${BOX_VERSION}",
              "providers": [
                {
                  "name": "vmware_desktop",
                  "url": "https://github.com/${GITHUB_REPOSITORY}/releases/download/v${BOX_VERSION}/${BOX_NAME}-${BOX_VERSION}.box",
                  "checksum_type": "sha256",
                  "checksum": "${CHECKSUM}"
                }
              ]
            }
          ]
        }
        EOF
        
    - name: Upload Box Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vagrant-box-vmware
        path: output/
        retention-days: 30
        
    - name: Create GitHub Release
      if: github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v1
      with:
        files: output/*.box
        tag_name: v${{ github.event.inputs.box_version }}
        name: Release v${{ github.event.inputs.box_version }}
        body: |
          VMware Vagrant Box Release
          
          - Box Name: ${{ github.event.inputs.box_name }}
          - Version: ${{ github.event.inputs.box_version }}
          - Provider: VMware Desktop
          
          Download the box file and add it to your Vagrant installation:
          ```bash
          vagrant box add ${{ github.event.inputs.box_name }} ${{ github.event.inputs.box_name }}-${{ github.event.inputs.box_version }}.box
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}