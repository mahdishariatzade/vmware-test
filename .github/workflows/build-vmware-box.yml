name: Build VMware Vagrant Box

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      box_name:
        description: 'Name for the Vagrant box'
        required: false
        default: 'arvan-practices-vmware'
      box_version:
        description: 'Version number for the box'
        required: false
        default: '1.0.0'

jobs:
  build-vmware-box:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install VMware Workstation
      run: |
        # Download VMware Workstation Player (free version)
        wget -O vmware-player.bundle "https://download3.vmware.com/software/player/file/VMware-Player-17.5.2-23775571.x86_64.bundle"
        chmod +x vmware-player.bundle
        sudo ./vmware-player.bundle --console --eulas-agreed --required
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y vagrant packer qemu-utils
        
    - name: Install Vagrant VMware plugin
      run: |
        vagrant plugin install vagrant-vmware-desktop
        
    - name: Create Packer configuration
      run: |
        cat > ubuntu-vmware.json << 'EOF'
        {
          "builders": [
            {
              "type": "vmware-vmx",
              "source_path": "https://releases.ubuntu.com/24.04/ubuntu-24.04.3-live-server-amd64.iso",
              "ssh_username": "vagrant",
              "ssh_password": "vagrant",
              "ssh_timeout": "30m",
              "shutdown_command": "echo 'vagrant' | sudo -S shutdown -P now",
              "vmx_data": {
                "memsize": "2048",
                "numvcpus": "2",
                "guestos": "ubuntu-64",
                "scsi0.virtualDev": "lsisas1068",
                "scsi0:0.present": "TRUE",
                "scsi0:0.fileName": "disk.vmdk",
                "scsi0:0.size": "20480",
                "ethernet0.virtualDev": "e1000",
                "ethernet0.present": "TRUE",
                "ethernet0.connectionType": "bridged",
                "ethernet0.wakeOnPcktRcv": "FALSE",
                "sound.virtualDev": "hdaudio",
                "sound.present": "TRUE",
                "mks.enable3d": "TRUE",
                "serial0.present": "TRUE",
                "serial0.fileType": "thinprint",
                "tools.syncTime": "TRUE",
                "tools.guestlib.enableHostInfo": "TRUE"
              }
            }
          ],
          "provisioners": [
            {
              "type": "shell",
              "inline": [
                "sudo apt-get update",
                "sudo apt-get install -y openssh-server",
                "sudo systemctl enable ssh",
                "sudo systemctl start ssh"
              ]
            },
            {
              "type": "shell",
              "inline": [
                "sudo useradd -m -s /bin/bash vagrant",
                "echo 'vagrant:vagrant' | sudo chpasswd",
                "sudo usermod -aG sudo vagrant",
                "echo 'vagrant ALL=(ALL) NOPASSWD:ALL' | sudo tee /etc/sudoers.d/vagrant"
              ]
            },
            {
              "type": "shell",
              "inline": [
                "sudo mkdir -p /home/vagrant/.ssh",
                "sudo wget --no-check-certificate https://raw.githubusercontent.com/hashicorp/vagrant/master/keys/vagrant.pub -O /home/vagrant/.ssh/authorized_keys",
                "sudo chown -R vagrant:vagrant /home/vagrant/.ssh",
                "sudo chmod 700 /home/vagrant/.ssh",
                "sudo chmod 600 /home/vagrant/.ssh/authorized_keys"
              ]
            },
            {
              "type": "shell",
              "inline": [
                "sudo apt-get clean",
                "sudo rm -rf /var/lib/apt/lists/*",
                "sudo rm -f /var/log/wtmp /var/log/btmp",
                "sudo rm -rf /tmp/* /var/tmp/*"
              ]
            }
          ],
          "post-processors": [
            {
              "type": "vagrant",
              "output": "{{.BuildName}}-{{.Provider}}.box"
            }
          ]
        }
        EOF
        
    - name: Build VMware box with Packer
      run: |
        packer build ubuntu-vmware.json
        
    - name: Create box metadata
      run: |
        cat > metadata.json << EOF
        {
          "name": "${{ github.event.inputs.box_name || 'arvan-practices-vmware' }}",
          "version": "${{ github.event.inputs.box_version || '1.0.0' }}",
          "provider": "vmware_desktop",
          "description": "Ubuntu 24.04 VMware box for Arvan Practices",
          "created": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
        }
        EOF
        
    - name: Upload box as artifact
      uses: actions/upload-artifact@v4
      with:
        name: vmware-box
        path: |
          *.box
          metadata.json
        retention-days: 30
        
    - name: Create GitHub Release
      if: github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.box_version || '1.0.0' }}
        name: VMware Box v${{ github.event.inputs.box_version || '1.0.0' }}
        body: |
          VMware Vagrant Box for Arvan Practices
          
          - Ubuntu 24.04 LTS
          - VMware Desktop compatible
          - Pre-configured with Vagrant user
          - Ready for development environments
        files: |
          *.box
          metadata.json
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 